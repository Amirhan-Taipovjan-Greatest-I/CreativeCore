plugins {
    id 'fabric-loom' version '0.12+'
    id 'maven-publish'
}

group = "team.creative"

repositories {
	maven {
		url = "https://api.modrinth.com/maven"
	}
	maven {
		url = "https://maven.minecraftforge.net/"
	}
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "maven.modrinth:modmenu:${project.modmenu_version}"
    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
    api project(':CreativeLoaderFabric')
    api "net.minecraftforge:eventbus:6.0.3"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }

    options.compilerArgs += ["-Xmaxerrs", "1000"];
}

